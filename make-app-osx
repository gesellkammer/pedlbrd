#!/bin/bash
if [ -z $VIRTUAL_ENV ] ; then
	echo ------------------------------------------------
	echo  This script must be called within a virtualenv
	echo ------------------------------------------------
	echo
	exit
fi

function usage() {
	echo "Makes the Pedlbrd.app"
	echo "Usage: $(basename $0) [options]"
	echo "Options:"
	echo "  --package"
	echo "      Create a .dmg for distribution" 
	echo "  --skip"
	echo "      Skip building the app. Implies --package"
	echo "  --no-midimonitor"
	echo "      Do not include MIDI Monitor in the built DMG"
	echo "  --dirty"
	echo "      Dont clean up after building .dmg"
	echo "  --debug-dmg"
	echo "      Create a .dmg fast, avoiding building and copying the app"
	echo "  --fat"
	echo "      Do not eliminate unused files from app"
	echo "  --pd-app"
	echo "      Package the pd control-panel as an app instead of just shipping the patch"
}

# -------------------------
#       Parse Options
# -------------------------
CREATEPACKAGE=0
OPENAPPFOLDER=1
BUILDAPP=1
MIDIMONITOR=1
COPYAPP=1
CLEANUP=1
REMOVE_UNUSED_FILES=0
PD=1
PDAPP=0

while test "${1:0:1}" = "-"; do
	case $1 in
		--help)
			usage
			exit;;
	    --package)
			CREATEPACKAGE=1
		    shift;;
	    --skip)
			BUILDAPP=0
			CREATEPACKAGE=1
			shift;;
		--debug-dmg)
			BUILDAPP=0
			CREATEPACKAGE=1
			COPYAPP=0
			shift;;
		--dirty)
			CLEANUP=0
			shift;;
		--no-midimonitor)
			MIDIMONITOR=0
			shift;;
		--pd-app)
			PDAPP=1
			shift;;
		--fat)
			REMOVE_UNUSED_FILES=0
			shift;;
	esac
done

function showoption() {
	# value, msg
	if [ $1 == 1 ] ; then
		echo "[x] $2"
	else
		echo "[ ] $2"
	fi
}

echo "---------------------------"
showoption $BUILDAPP      "build app"
showoption $CREATEPACKAGE "create dmg"
showoption $CLEANUP       "clean garbage"
showoption $REMOVE_UNUSED_FILES "remove unused files"
showoption $PD "include PD control panel"
showoption $PDAPP "package PD control panel as App"
echo "---------------------------"
echo

# ------------
#  Build app
# ------------

BUILDFOLDER="appbuild"
ENTRY='Pedlbrd'
ICONSIZE=128
EXCLUDES="cython,test,pip,Finder"

if [ $BUILDAPP == 1 ]; then
	echo "<< building app >>"
	mkdir -p $BUILDFOLDER

	rm -f $BUILDFOLDER/setup.py

	for f in pedlbrd pedltalk.py assets oscmonitor.py firmware; do
		cp -r $f $BUILDFOLDER/
	done

	if [ $PD == 1 ]; then
		mkdir -p $BUILDFOLDER/extra
		mkdir -p $BUILDFOLDER/extra/pd
		cp extra/pd/*.pd $BUILDFOLDER/extra/pd
		if [ $PDAPP == 1 ]; then
			cp -r extra/pd/*.app $BUILDFOLDER/extra/pd
		fi
	fi

	cp -f $ENTRY.py $BUILDFOLDER

	pushd $BUILDFOLDER
	py2applet --make-setup Pedlbrd.py pedltalk.py oscmonitor.py assets/pedlbrd-icon.icns
	python setup.py py2app -e $EXCLUDES --resources extra,assets,firmware
	popd

	if [ $REMOVE_UNUSED_FILES == 1 ]; then
		echo "<< removing unused files >>"
		rm -fr $BUILDFOLDER/dist/$ENTRY.app/Contents/Frameworks/Tcl.framework/Versions/8.5/Resources/English.lproj/ActiveTcl-8.5
		rm -fr $BUILDFOLDER/dist/$ENTRY.app/Contents/Resources/lib/python2.7/lib-dynload/Cython
		rm -fr $BUILDFOLDER/dist/$ENTRY.app/Contents/Resources/lib/python2.7/lib-dynload/PySide
	fi
	
	echo "The app is at $BUILDFOLDER/dist/$ENTRY.app"

	if [ $OPENAPPFOLDER == 1 ]; then
		open "$BUILDFOLDER/dist"
	fi
fi

# -----------------
#    Create DMG
# -----------------

if [ $CREATEPACKAGE == 1 ]; then
	X0=32
	Y0=32
	MARGINX=32
	MARGINY=48
	PACKAGE=$ENTRY.dmg
	APPFOLDERX=$(( ($ICONSIZE + $MARGINX)*3 ))

	echo "<< creating .dmg package >>"
	rm -f $PACKAGE
	mkdir -p $BUILDFOLDER/package
	if [ $COPYAPP == 1 ] ; then
		echo "   * copying app"
		cp -r $BUILDFOLDER/dist/$ENTRY.app $BUILDFOLDER/package
	fi
	if [ $MIDIMONITOR == 1 ]; then
		echo "   * copying MIDI Monitor"
		cp -r "extra/OSX/MIDI Monitor.app" $BUILDFOLDER/package
	fi
	cp extra/OSX/README.txt $BUILDFOLDER/package

	echo "   * creating dmg"
	extra/OSX/yoursway-create-dmg/create-dmg \
		--window-size $(( $APPFOLDERX + $ICONSIZE + $X0 )) $(( $ICONSIZE * 3 )) \
		--volname $ENTRY --background extra/images/background.png --icon-size $ICONSIZE \
		--icon $ENTRY.app $X0 $Y0 --app-drop-link $APPFOLDERX $Y0 \
		--icon MIDI\ Monitor.app $(($X0 + $ICONSIZE + $MARGINX)) $Y0 \
		--icon README.txt $X0 $(( $Y0 + $ICONSIZE + $MARGINY)) \
		$PACKAGE $BUILDFOLDER/package

	# if package exists, build was successful. Move to the dist folder, else raise error
	if [ -e $PACKAGE ] ; then
		rm -f $BUILDFOLDER/dist/$PACKAGE
		mv $PACKAGE $BUILDFOLDER/dist
		open $BUILDFOLDER/dist
		if [ CLEANUP == 1 ] ; then
			echo "<< removing build files for .dmg package >>"
			rm -fr $BUIDFOLDER/package
		fi
	else
		echo "### ERROR: .dmg package not created!"
		exit
	fi
fi
